RPG ONBOARDING TOOL:

------------------------------------------------------------------------------------------------------------------------------------------------------------

RULES:

1.Race: Pick a race
2.Training: Pick a training package
3.Stats: Stats start at racial minimum listed and then you have 12 points to spend to increase your Stats without going above the racial maximum allowed. Each point increases the stat by 1.
4.Skills: Race and Training Package provide a set of skills (which can stack) you then have 30 points to spend to buy new skills and increase skill ranks. Increasing skills cost Rank+1 points (e.g. new skill is rank 0 to 1 so cost is  1+1=2; increase rank from 2 to 3 costs 3+1=4). At character creation no skill can be higher than rank 3. Max rank for any skill is 5.
5.Advantages and Disadvantages: You can buy advantages for your character with skill points, you can also buy disadvantages which give you extra skill points to spend. You are limited to 2 disadvantages at character creation.
6.Equipment: Everyone gets the same starting gear, you also get 1500 Credits to spend to buy what you need, any Credits you dont spend from that you will lose. You also get another 100 Credits on your finance card to keep and 100 Units (10 Credits) in physical currency. If you choose to upgrade your finance card to a Finance Chip implant you can get another 100 Credits. Finance Chips are not available for Ebonite characters.


-------------------------------------------------------------------------------------------------------------------------------------------------------------

PROJECT STRUCTURE:

1.Main folders: Core, Infrastructure, Application, Web
2.Sub folders: Core(Enums,Interfaces,Models), Infrastructure(Data,Repositories,SeedData,UnitOfWork), Application(DTOs,Services), Web(Controllers,Properties,Views,wwwroot,appsettings,Program,RPGOnboardingTool.Web.csproj)
3.Sub-sub folders1: Core --> Enums(StatType,TraitType,EquipmentType), Interfaces(ICharacterRepository,IUnitOfWork), Models(Character,Race,TrainingPackage,Stat,Skill,Trait,EquipmentItem)
3.Sub-sub folders2: Infrastructure --> Data(ApplicationDbContext,Migrations), Repositories(CharacterRepository), SeedData(StaticGameData), UnitOfWork(UnitOfWork),  
3.Sub-sub folders3: Application --> DTOs(CharacterCreationDto,CharacterResponseDto), Services(CharacterService), 
3.Sub-sub folders4: Web --> Controllers(CharacterApiController,HomeController), Properties(launchSettings), Views(Home --> Index), wwwroot --> css(site), js(main) 

RPGOnboardingTool/
├── RPGOnboardingTool.sln
│
├── RPGOnboardingTool.Core/
│   ├── Enums/
│   │   ├── StatType.cs
│   │   ├── TraitType.cs
│   │   └── EquipmentType.cs
│   ├── Interfaces/
│   │   ├── ICharacterRepository.cs
│   │   └── IUnitOfWork.cs
│   └── Models/
│       ├── Character.cs
│       ├── Race.cs
│       ├── TrainingPackage.cs
│       ├── Stat.cs
│       ├── Skill.cs
│       ├── Trait.cs
│       └── EquipmentItem.cs
│
├── RPGOnboardingTool.Infrastructure/
│   ├── Data/
│   │   ├── ApplicationDbContext.cs
│   │   └── Migrations/ //This folder is created automatically by EF Core migrations 
│   ├── Repositories/
│   │   └── CharacterRepository.cs
│   ├── SeedData/
│   │   └── StaticGameData.cs
│   └── UnitOfWork/
│       └── UnitOfWork.cs
│
├── RPGOnboardingTool.Application/
│   ├── DTOs/
│   │   ├── CharacterCreationDto.cs
│   │   └── CharacterResponseDto.cs
│   └── Services/
│       └── CharacterService.cs
│
└── RPGOnboardingTool.Web/
    ├── Controllers/
    │   ├── CharacterApiController.cs
    │   └── HomeController.cs
    ├── Properties/
    │   └── launchSettings.json (Generated by Visual Studio)
    ├── Views/
    │   ├── Home/
    │   │   └── Index.cshtml
    │   └── Shared/
    │       ├── Error.cshtml (Generated by Visual Studio)
    │       ├── _Layout.cshtml (Generated by Visual Studio - Not used as much for SPA but good to keep)
    │       └── _ValidationScriptsPartial.cshtml (Generated by Visual Studio)
    ├── wwwroot/
    │   ├── css/
    │   │   └── site.css (Generated by Visual Studio)
    │   ├── js/
    │   │   └── main.jsx
    │   ├── lib/ (Generated by Visual Studio, usually empty if not using built-in libraries)
    │   └── favicon.ico (Generated by Visual Studio)
    ├── appsettings.json
    ├── appsettings.Development.json (Generated by Visual Studio)
    ├── Program.cs
    └── RPGOnboardingTool.Web.csproj
----------------------------------------------------------------------------------------------------------------------------------------


ChosenLocation/
├── RPGOnboardingTool/                  <--  SOLUTION FOLDER (created by 'dotnet new sln')
│   ├── RPGOnboardingTool.sln           <-- The solution file that ties all projects together
│   │
│   ├── RPGOnboardingTool.Core/         <--  Core PROJECT FOLDER
│   │   ├── RPGOnboardingTool.Core.csproj
│   │   ├── Enums/
│   │   ├── Interfaces/
│   │   └── Models/
│   │   └── (other core files)
│   │
│   ├── RPGOnboardingTool.Infrastructure/ <--  Infrastructure PROJECT FOLDER
│   │   ├── RPGOnboardingTool.Infrastructure.csproj
│   │   ├── Data/
│   │   ├── Repositories/
│   │   └── (other infrastructure files)
│   │
│   ├── RPGOnboardingTool.Application/  <--  Application PROJECT FOLDER
│   │   ├── RPGOnboardingTool.Application.csproj
│   │   ├── DTOs/
│   │   └── Services/
│   │   └── (other application files)
│   │
│   └── RPGOnboardingTool.Web/          <-- ** WEB PROJECT FOLDER**
│       ├── RPGOnboardingTool.Web.csproj
│       ├── Controllers/
│       ├── Views/
│       │   └── Home/
│       │       └── Index.cshtml
│       ├── wwwroot/                    <-- **THIS IS WHERE `wwwroot` GOES**
│       │   ├── css/
│       │   └── js/
│       │       └── main.jsx
│       ├── appsettings.json
│       └── Program.cs
│       └── (other web files)
│
└── (any other files at the solution root level)

