// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPGOnboardingTool.Infrastructure.Data;

#nullable disable

namespace RPGOnboardingTool.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250712183448_UpdateGameData")]
    partial class UpdateGameData
    {
        /// <inheritdoc />
        protected void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Closing")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWeightCarried")
                        .HasColumnType("int");

                    b.Property<int>("EncumbranceValue")
                        .HasColumnType("int");

                    b.Property<bool>("HasFinanceChip")
                        .HasColumnType("bit");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("MaxHitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Movement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rushing")
                        .HasColumnType("int");

                    b.Property<int>("SCL")
                        .HasColumnType("int");

                    b.Property<int>("SkillPointsRemaining")
                        .HasColumnType("int");

                    b.Property<int>("StatPointsRemaining")
                        .HasColumnType("int");

                    b.Property<Guid?>("TrainingPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Unis")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("TrainingPackageId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.CharacterEquipment", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EquipmentItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "EquipmentItemId");

                    b.HasIndex("EquipmentItemId");

                    b.ToTable("CharacterEquipments");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.CharacterTrait", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "TraitId");

                    b.HasIndex("TraitId");

                    b.ToTable("CharacterTraits");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.EquipmentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStartingGear")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("WeightFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EquipmentItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("021e7592-4026-48dc-9d6c-952fd195d2e0"),
                            Cost = 200,
                            Description = "",
                            IsStartingGear = false,
                            Name = "Standard Pistol",
                            Type = 0,
                            WeightFactor = 2
                        },
                        new
                        {
                            Id = new Guid("c1cf4678-e566-4756-af15-e1053ead6261"),
                            Cost = 50,
                            Description = "",
                            IsStartingGear = false,
                            Name = "Combat Knife",
                            Type = 0,
                            WeightFactor = 1
                        },
                        new
                        {
                            Id = new Guid("b7361533-f36c-42e1-ae95-f98f2b6bcad2"),
                            Cost = 500,
                            Description = "",
                            IsStartingGear = false,
                            Name = "Light Body Armor",
                            Type = 0,
                            WeightFactor = 10
                        },
                        new
                        {
                            Id = new Guid("9ab68ee2-65aa-4e14-ab67-dcc33564b97c"),
                            Cost = 100,
                            Description = "",
                            IsStartingGear = false,
                            Name = "Medkit",
                            Type = 0,
                            WeightFactor = 2
                        },
                        new
                        {
                            Id = new Guid("d0c97cfc-55d7-48c1-be28-44899ba4a307"),
                            Cost = 1000,
                            Description = "",
                            IsStartingGear = false,
                            Name = "Heavy Rifle",
                            Type = 0,
                            WeightFactor = 15
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Race", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaseClosingSpeed")
                        .HasColumnType("int");

                    b.Property<int>("BaseEncumbrance")
                        .HasColumnType("int");

                    b.Property<int>("BaseInitiative")
                        .HasColumnType("int");

                    b.Property<int>("BaseMovement")
                        .HasColumnType("int");

                    b.Property<int>("BaseRushingSpeed")
                        .HasColumnType("int");

                    b.Property<bool>("CanHaveFinanceChip")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxHp")
                        .HasColumnType("int");

                    b.Property<int>("MaxLuck")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445501"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 10,
                            BaseMovement = 6,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = true,
                            Description = "Balanced and adaptable.",
                            MaxHp = 50,
                            MaxLuck = 3,
                            Name = "Human"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 8,
                            BaseMovement = 5,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = false,
                            Description = "Stalwart and protective.",
                            MaxHp = 60,
                            MaxLuck = 2,
                            Name = "Ebonite (Blue)"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445503"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 7,
                            BaseMovement = 5,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = false,
                            Description = "Aggressive and powerful.",
                            MaxHp = 70,
                            MaxLuck = 1,
                            Name = "Ebonite (Red Frother)"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445504"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 9,
                            BaseMovement = 7,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = true,
                            Description = "Intelligent and diplomatic.",
                            MaxHp = 45,
                            MaxLuck = 4,
                            Name = "Neophron"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445505"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 9,
                            BaseMovement = 6,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = true,
                            Description = "Resilient and cunning.",
                            MaxHp = 55,
                            MaxLuck = 3,
                            Name = "Shaktar"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445506"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 11,
                            BaseMovement = 7,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = true,
                            Description = "Brutal and intimidating.",
                            MaxHp = 65,
                            MaxLuck = 2,
                            Name = "Stormer 313 (Malice)"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445507"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 12,
                            BaseMovement = 8,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = true,
                            Description = "Stealthy and agile.",
                            MaxHp = 50,
                            MaxLuck = 3,
                            Name = "Stormer 711 (Xeno)"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4000-8000-112233445508"),
                            BaseClosingSpeed = 0,
                            BaseEncumbrance = 0,
                            BaseInitiative = 10,
                            BaseMovement = 6,
                            BaseRushingSpeed = 0,
                            CanHaveFinanceChip = true,
                            Description = "Observant and tracking.",
                            MaxHp = 50,
                            MaxLuck = 3,
                            Name = "Wraithen"
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.RaceSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("RaceSkills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54d5191e-f445-48ac-8ad5-c42cbf8d8deb"),
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            Rank = 1,
                            SkillName = "Detect"
                        },
                        new
                        {
                            Id = new Guid("78149480-02fd-4bcb-b48e-7370b2a3de18"),
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            Rank = 1,
                            SkillName = "Education: Academic"
                        },
                        new
                        {
                            Id = new Guid("07d40759-b8de-4bc6-87fc-b8920ab8f542"),
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            Rank = 1,
                            SkillName = "EBB - Heal"
                        },
                        new
                        {
                            Id = new Guid("9d8e26fb-21bf-4c9b-a2e5-c1ed2c6c7971"),
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            Rank = 1,
                            SkillName = "Protect"
                        },
                        new
                        {
                            Id = new Guid("c330730a-4ef7-4975-8410-914a9f4a154c"),
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            Rank = 1,
                            SkillName = "Thermal: Blue Ebonite"
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.RaceStatLimit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxValue")
                        .HasColumnType("int");

                    b.Property<int>("MinValue")
                        .HasColumnType("int");

                    b.Property<Guid>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("RaceStatLimit");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe024f9d-fb71-4cf8-8d45-34a88a3a1c0a"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445501"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("534cfce1-766e-4ede-b8a6-4e06daef3e50"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445501"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("61528054-cc12-4db4-9752-f7154bcb7437"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445501"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("51bcfa86-0aaa-404a-a050-421c7e7096ad"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445501"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("35ea195e-36b1-45b9-8374-2b7c120b1bc9"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445501"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("a20f1071-ff03-4443-851b-48323d572900"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445501"),
                            StatType = 9
                        },
                        new
                        {
                            Id = new Guid("47d38181-a3bb-4501-a6c5-8e3f5ab06683"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("07c6fdb5-3545-4071-b8c5-c0a6da0c64a1"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("ccb94de1-3909-4e5b-b442-8fe3c4fe4fd7"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("2d8adced-ba22-42bf-8f7c-98641cb406d6"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("1f1cb680-1dd7-4049-ae72-78c34569d860"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("c63842d4-86ef-49fe-a036-1b5c371e39ee"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445502"),
                            StatType = 9
                        },
                        new
                        {
                            Id = new Guid("54e1edc5-8d3c-45b8-8220-7be0a35d16d4"),
                            MaxValue = 8,
                            MinValue = 3,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445503"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("2d76b7ad-e8c3-42da-88c0-4bd7cd69b2b9"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445503"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("ce2e3dd8-4a2e-47a9-90ec-d7bfa526f20e"),
                            MaxValue = 4,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445503"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("948c9011-e936-43d4-b186-6dec161def54"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445503"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("e2c07ed3-2e19-458b-bd3d-0323eac6737b"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445503"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("f76f74a4-b2a0-4cb8-9418-e7a9ea168ac2"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445503"),
                            StatType = 9
                        },
                        new
                        {
                            Id = new Guid("d14646dc-59b7-419f-83cd-00244c8675b6"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445504"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("179f6d2d-df98-4c84-8389-bcff4749e62d"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445504"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("cb307497-52c6-448d-b1e8-f73cafb9520a"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445504"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("99e5c662-6550-44e3-bee9-b5942d6e23cb"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445504"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("41aefefd-5dc2-46b1-9a9b-62583b21b3cd"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445504"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("569bf646-d758-462f-b2a0-b91d9fe6aa65"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445504"),
                            StatType = 9
                        },
                        new
                        {
                            Id = new Guid("e4990900-cb90-4394-aac2-ebe5929e8565"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445505"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("84ecbf69-c8b4-4082-b419-820ccb0734fd"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445505"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("d222b74b-d9c0-4547-a4f2-800adda82c56"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445505"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("ce085b71-4a5c-46d3-b350-8d06ef95171c"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445505"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("954b4f0d-c649-4454-88c4-87e1112a107f"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445505"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("2227c9dc-8b06-44b5-85e6-acb399d84612"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445505"),
                            StatType = 9
                        },
                        new
                        {
                            Id = new Guid("c7584052-0ff0-46e8-adbd-c62ee500954c"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445506"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("8bfa8420-f5d1-4df4-ae9a-471c2a0f54ee"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445506"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("d1adced4-8151-4377-8613-575ec2de85a4"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445506"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("34e4f412-d303-4922-8bd9-d8c594ec9f35"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445506"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("058dcc71-41d1-444b-9025-292874b00626"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445506"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("9e72b22b-a940-4eb2-931e-6ba408176522"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445506"),
                            StatType = 9
                        },
                        new
                        {
                            Id = new Guid("f8939a51-80af-452b-a0a1-0bdbb7840b6a"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445507"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("1ba71e70-eeea-4498-9613-0f515c6cf731"),
                            MaxValue = 8,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445507"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("7eccb024-e41d-4191-b69f-911ff2ba233e"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445507"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("8f9cf459-1be6-49f8-afa6-e63db9fb5dc0"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445507"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("100afcfa-b247-431d-87f1-697ed01e54cf"),
                            MaxValue = 5,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445507"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("93b7daee-fe6f-43a9-b896-243e76d7c3d5"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445507"),
                            StatType = 9
                        },
                        new
                        {
                            Id = new Guid("765cee4d-6058-4c1c-8cbd-768f146873a0"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445508"),
                            StatType = 0
                        },
                        new
                        {
                            Id = new Guid("b1804559-b2a7-47f6-b2fd-37c3dedbc345"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445508"),
                            StatType = 1
                        },
                        new
                        {
                            Id = new Guid("e1c758ec-59af-4cb8-a2c0-3c6ff9645f88"),
                            MaxValue = 7,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445508"),
                            StatType = 6
                        },
                        new
                        {
                            Id = new Guid("17ae1fb5-00a0-4f81-92dd-8ea75073ff20"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445508"),
                            StatType = 7
                        },
                        new
                        {
                            Id = new Guid("e6656e4d-2d71-442b-851a-653087debc68"),
                            MaxValue = 6,
                            MinValue = 1,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445508"),
                            StatType = 8
                        },
                        new
                        {
                            Id = new Guid("a1049ae0-99e4-4e16-98eb-7b8e18283767"),
                            MaxValue = 7,
                            MinValue = 2,
                            RaceId = new Guid("a1b2c3d4-e5f6-4000-8000-112233445508"),
                            StatType = 9
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("RelatedStat")
                        .HasColumnType("int");

                    b.Property<int>("SkillDice")
                        .HasColumnType("int");

                    b.Property<int>("SuccessDie")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.SkillDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelatedStat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SkillDefinitions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b55eb81e-49e4-484b-b6ab-e98240abadbb"),
                            Name = "Athletics",
                            RelatedStat = 0
                        },
                        new
                        {
                            Id = new Guid("debd8d4a-0fcb-4e47-ae34-22a4d308ea75"),
                            Name = "Acrobatics",
                            RelatedStat = 1
                        },
                        new
                        {
                            Id = new Guid("7fded55c-e092-4050-949d-bef6f36db28d"),
                            Name = "Stealth",
                            RelatedStat = 1
                        },
                        new
                        {
                            Id = new Guid("c9202acc-9086-4cca-9942-fce42b212160"),
                            Name = "History",
                            RelatedStat = 6
                        },
                        new
                        {
                            Id = new Guid("ec4a04ef-892c-45b4-8c77-4baba4c16b0e"),
                            Name = "Persuasion",
                            RelatedStat = 8
                        },
                        new
                        {
                            Id = new Guid("0e4d0ce9-c688-48ec-bad2-87a00a303d57"),
                            Name = "Intimidation",
                            RelatedStat = 8
                        },
                        new
                        {
                            Id = new Guid("8a311521-606f-43c6-b115-fc90d2513a40"),
                            Name = "Deception",
                            RelatedStat = 8
                        },
                        new
                        {
                            Id = new Guid("5fe42ecc-5870-454a-95c4-60543422125d"),
                            Name = "Insight",
                            RelatedStat = 9
                        },
                        new
                        {
                            Id = new Guid("ed8f8513-6ff1-43e8-a566-0f416f3b645b"),
                            Name = "Survival",
                            RelatedStat = 9
                        },
                        new
                        {
                            Id = new Guid("2600e10c-3c33-465a-977e-4bcceafcb818"),
                            Name = "Detect",
                            RelatedStat = 9
                        },
                        new
                        {
                            Id = new Guid("426a9bfa-2fdf-4a95-a62e-585a2e7a50e7"),
                            Name = "Education: Academic",
                            RelatedStat = 6
                        },
                        new
                        {
                            Id = new Guid("e90855cb-1011-4641-8554-d52bd5b5a06b"),
                            Name = "EBB - Heal",
                            RelatedStat = 6
                        },
                        new
                        {
                            Id = new Guid("c7422288-9c86-443d-96b8-39d7436f200e"),
                            Name = "Protect",
                            RelatedStat = 0
                        },
                        new
                        {
                            Id = new Guid("74825202-b485-4adb-ba4b-b9be774d7a8d"),
                            Name = "Thermal: Blue Ebonite",
                            RelatedStat = 2
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Stat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.TrainingPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TrainingPackages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445501"),
                            Description = "A balanced training package for humans.",
                            Name = "Human Training Package"
                        },
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445502"),
                            Description = "A training package focused on protection and support for Blue Ebonites.",
                            Name = "Ebonite (Blue) Training Package"
                        },
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445503"),
                            Description = "A training package focused on aggression for Red Frother Ebonites.",
                            Name = "Ebonite (Red Frother) Training Package"
                        },
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445504"),
                            Description = "A training package for Neophron diplomats and intellectuals.",
                            Name = "Neophron Training Package"
                        },
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445505"),
                            Description = "A training package for the cunning and resilient Shaktar.",
                            Name = "Shaktar Training Package"
                        },
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445506"),
                            Description = "A brutal training package for the Stormer 313.",
                            Name = "Stormer 313 (Malice) Training Package"
                        },
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445507"),
                            Description = "A stealth-focused training package for the Stormer 711.",
                            Name = "Stormer 711 (Xeno) Training Package"
                        },
                        new
                        {
                            Id = new Guid("b1b2c3d4-e5f6-4000-8000-112233445508"),
                            Description = "A training package for the observant Wraithen.",
                            Name = "Wraithen Training Package"
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.TrainingPackageSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrainingPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPackageId");

                    b.ToTable("TrainingPackageSkill");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5a3d492-8eb9-48b2-8480-7636cf5c5fbc"),
                            Rank = 1,
                            SkillName = "Athletics",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445501")
                        },
                        new
                        {
                            Id = new Guid("ae133e0d-3ca1-41eb-b528-726195ea6caf"),
                            Rank = 2,
                            SkillName = "Protect",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445502")
                        },
                        new
                        {
                            Id = new Guid("2531c512-fa51-4adc-b7a6-5f3af4c0b3c4"),
                            Rank = 2,
                            SkillName = "Intimidation",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445503")
                        },
                        new
                        {
                            Id = new Guid("9f793438-d4c1-4d21-8282-7ed97aa756b2"),
                            Rank = 2,
                            SkillName = "Persuasion",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445504")
                        },
                        new
                        {
                            Id = new Guid("d02fc85a-7c53-4e44-b1c8-ec067838f56d"),
                            Rank = 2,
                            SkillName = "Stealth",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445505")
                        },
                        new
                        {
                            Id = new Guid("dd31c10f-bba0-45ed-a100-0d90661e76be"),
                            Rank = 2,
                            SkillName = "Athletics",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445506")
                        },
                        new
                        {
                            Id = new Guid("005f174b-547a-4368-9965-f57ead8e660a"),
                            Rank = 2,
                            SkillName = "Acrobatics",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445507")
                        },
                        new
                        {
                            Id = new Guid("cd2d7e61-ba6f-4703-a4bd-1c2dc0217499"),
                            Rank = 2,
                            SkillName = "Insight",
                            TrainingPackageId = new Guid("b1b2c3d4-e5f6-4000-8000-112233445508")
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.TrainingPackageStatRequirement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MinValue")
                        .HasColumnType("int");

                    b.Property<int>("StatType")
                        .HasColumnType("int");

                    b.Property<Guid>("TrainingPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPackageId");

                    b.ToTable("TrainingPackageStatRequirement");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Trait", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BasePointCost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUnique")
                        .HasColumnType("bit");

                    b.Property<int>("MaxRankAtCreation")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresDetail")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Traits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75b33d9a-e76a-44c8-9704-c7758464b552"),
                            BasePointCost = -5,
                            Description = "Increases resistance to fear effects.",
                            IsUnique = false,
                            MaxRankAtCreation = 1,
                            Name = "Bravery",
                            RequiresDetail = false,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ce29f6cd-bec9-4ab6-a012-aef4315f0feb"),
                            BasePointCost = 10,
                            Description = "A negative trait that imposes penalties.",
                            IsUnique = false,
                            MaxRankAtCreation = 1,
                            Name = "Cursed",
                            RequiresDetail = false,
                            Type = 0
                        });
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Character", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.Race", "CharacterRace")
                        .WithMany("Characters")
                        .HasForeignKey("RaceId");

                    b.HasOne("RPGOnboardingTool.Core.Models.TrainingPackage", "CharacterTrainingPackage")
                        .WithMany("Characters")
                        .HasForeignKey("TrainingPackageId");

                    b.Navigation("CharacterRace");

                    b.Navigation("CharacterTrainingPackage");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.CharacterEquipment", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.Character", "Character")
                        .WithMany("CharacterEquipment")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPGOnboardingTool.Core.Models.EquipmentItem", "EquipmentItem")
                        .WithMany("CharacterEquipment")
                        .HasForeignKey("EquipmentItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("EquipmentItem");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.CharacterTrait", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.Character", "Character")
                        .WithMany("CharacterTraits")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPGOnboardingTool.Core.Models.Trait", "Trait")
                        .WithMany("CharacterTraits")
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Trait");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.RaceSkill", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.Race", "Race")
                        .WithMany("SpeciesSkills")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Race");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.RaceStatLimit", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.Race", "Race")
                        .WithMany("StatLimits")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Race");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Skill", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.Character", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Stat", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.Character", "Character")
                        .WithMany("Stats")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.TrainingPackageSkill", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.TrainingPackage", "TrainingPackage")
                        .WithMany("PackageSkills")
                        .HasForeignKey("TrainingPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPackage");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.TrainingPackageStatRequirement", b =>
                {
                    b.HasOne("RPGOnboardingTool.Core.Models.TrainingPackage", "TrainingPackage")
                        .WithMany("StatRequirements")
                        .HasForeignKey("TrainingPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPackage");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Character", b =>
                {
                    b.Navigation("CharacterEquipment");

                    b.Navigation("CharacterTraits");

                    b.Navigation("Skills");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.EquipmentItem", b =>
                {
                    b.Navigation("CharacterEquipment");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Race", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("SpeciesSkills");

                    b.Navigation("StatLimits");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.TrainingPackage", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("PackageSkills");

                    b.Navigation("StatRequirements");
                });

            modelBuilder.Entity("RPGOnboardingTool.Core.Models.Trait", b =>
                {
                    b.Navigation("CharacterTraits");
                });
#pragma warning restore 612, 618
        }
    }
}
